 const WebSocket = require('ws');
 const wss = new WebSocket.Server({ port: 3000 });

 let modelState = '';  // El estado global del modelo

 wss.on('connection', (ws) => {
   console.log('Nuevo usuario conectado');

   // Enviar el estado inicial del modelo al nuevo cliente
  if (modelState) {
   ws.send(JSON.stringify({ action: 'init', model: modelState }));
  }

   // Escuchar mensajes desde el cliente
   ws.on('message', (message) => {
     console.log('Mensaje recibido del cliente:', message.toString());  // Convertir buffer a string
     const data = JSON.parse(message.toString());
    
     if (data.action === 'update') {
       modelState = data.model;  // Actualizar el modelo global con los cambios

       // Enviar los cambios a todos los demÃ¡s usuarios conectados
      wss.clients.forEach((client) => {
         if (client !== ws && client.readyState === WebSocket.OPEN) {
           client.send(JSON.stringify({ action: 'update', model: modelState }));
         }
      });
    }
   });

   ws.on('close', () => {
     console.log('Usuario desconectado');
   });
 });